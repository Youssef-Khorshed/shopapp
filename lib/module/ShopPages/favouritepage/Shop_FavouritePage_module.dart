import 'package:buildcondition/buildcondition.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:shopapp/layout/shop.layout/home_cubit/homecubit.dart';
import 'package:shopapp/layout/shop.layout/home_cubit/homestatus.dart';
import 'package:shopapp/model/ShopGetFavourite/getfvourite.dart';
import 'package:shopapp/shared/component/component.dart';

class Shop_favouritePage extends StatelessWidget {
  const Shop_favouritePage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    ShopHomeCubit shop = ShopHomeCubit.get(context);
    return BlocConsumer<ShopHomeCubit,ShopHomeStates>
      (builder: (context,state){return BuildCondition(
      fallback:(context)=> Center(child: CircularProgressIndicator(),),
      condition: state is!  ShopHomeLoadingGetFavouriteState,
      builder:(context)=>ListView.separated
        (itemBuilder: (context,index)=>favitems(shop: shop,element:  shop.autogenerated.data.data[index])
          , separatorBuilder:(context,index)=>line()
          , itemCount: shop.autogenerated.data.data.length) ,
    );}
    , listener: (context,status){
          if(status is ShopHomeErrorFavouriteState)
          {
            toast(message: status.shopFavourite.message, toaststate: Toaststate.error);
          }
          else if(status is ShopHomeSucessFavouriteState)
          {
            toast(message: status.shopFavourite.message, toaststate: Toaststate.success);
          }
          else if(status is ShopHomeInitialSucessFavouriteState)
          {
            toast(message: 'جاري التعديل' , toaststate: Toaststate.warrning);
          }

        });
  }
Widget favitems({required GetFaveData element,required ShopHomeCubit shop })=> Padding(
  padding: const EdgeInsets.all(15.0),
  child:   Column(
    crossAxisAlignment: CrossAxisAlignment.start,
    children:
    [
      Stack(
        alignment: Alignment.bottomLeft,
        children: [
          Image(height: 200,image:
          NetworkImage(element.product.image),width: double.infinity,fit: BoxFit.fill,),
          if( element.product.discount.round() != 0)
            Text('Discount ${element.product.discount.round()}%'
              ,overflow: TextOverflow.ellipsis,maxLines: 2,style: TextStyle(color: Colors.grey[300],backgroundColor:Colors.red),),
        ],
      )
      ,Text('${element.product.name}',overflow: TextOverflow.ellipsis,maxLines: 2,),
      Row(
        mainAxisAlignment: MainAxisAlignment.start,
        children: [
          Text('${element.product.price.round()}',overflow: TextOverflow.ellipsis,maxLines: 2,),
          SizedBox(width: 5,),
          if(element.product.discount.round() != 0)
            Text('${element.product.oldPrice.round()}',overflow: TextOverflow.ellipsis,maxLines: 2,
              style: TextStyle(color: Colors.grey,decoration: TextDecoration.lineThrough),),
          Spacer(),
          IconButton(onPressed: (){shop.post_favourite_state(element.product.id);},icon: Icon(shop.favourites[element.product.id]! ? Icons.favorite: Icons.favorite_outline  ),)


        ],
      ),

    ],),
);

}
